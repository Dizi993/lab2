#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <math.h>
#include <locale.h>
#define PI 3.14159265358979323846
#define SCREENW 60
#define SCREENH 40

typedef double (*TFunc)(double);

double F1(double x) {
    if (x >= 1) {
        printf("Для корректного ответа введите дробное число, меньше 1\n");
        return NAN;
    }
    return 2 * sin(PI * x) + sin(3 * PI * x) / (3 * x);
}

double F2(double x) {
    if (x <= 0) {
        return 1 + (3 + x) / (1 + pow(x, 2));
    }
    else if (x < 1) {
        return sqrt(1 + pow((1 - x), 2));
    }
    else {
        return (1 + x) / (1 + pow(cos(x), 2));
    }
}

void printTable(double (*func)(double), double x1, double x2, double step) {
    printf("-------------------------\n");
    printf("| x\t | F(x)\t\t|\n");
    printf("-------------------------\n");
    for (double x = x1; x < x2; x += step) {
        double result = func(x);
        if (x < 10) {
            printf("| %-4.2lf\t | %-12.4lf |\n", x, result);
        }
        else printf("| %-4.2lf  | %-12.4lf |\n", x, result);
    }
    printf("------------------------");
}

void plot(double xn, double xk, TFunc f) {
    char screen[SCREENW][SCREENH];
    double x, y[SCREENW];
    double ymin = 0, ymax = 0;
    double hx, hy;
    int i, j;
    int xz, yz;

    hx = (xk - xn) / (SCREENW - 1);

    for (i = 0, x = xn; i < SCREENW; ++i, x += hx) {
        y[i] = f(x); // расчет значений функции для каждой точки поля вывода графика
        if (y[i] < ymin) ymin = y[i];
        if (y[i] > ymax) ymax = y[i];
    }

    hy = (ymax - ymin) / (SCREENH - 1);
    yz = (int)floor(ymax / hy + 0.5);
    xz = (int)floor((0. - xn) / hx + 0.5);

    // построение осей и заполнение массива пробелами
    for (j = 0; j < SCREENH; ++j) {
        for (i = 0; i < SCREENW; ++i) {
            if (j == yz && i == xz) screen[i][j] = '+';
            else if (j == yz) screen[i][j] = '-';
            else if (i == xz) screen[i][j] = '|';
            else screen[i][j] = ' ';
        }
    }

    // определение положения значений функции на поле вывода
    for (i = 0, x = xn; i < SCREENW; ++i) {
        j = (int)floor((ymax - y[i]) / hy + 0.5);
        screen[i][j] = '*';
    }

    // печать массива символов
    for (j = 0; j < SCREENH; ++j) {
        for (i = 0; i < SCREENW; ++i) putchar(screen[i][j]);
        putchar('\n');
    }
}

int main() {
    setlocale(LC_ALL, "RUS");

    int choice;
    double x, x1, x2, step;

    while (1) {
        printf("\nВыберите действие:\n");
        printf("1. Найти значение F1(x)\n");
        printf("2. Найти значение F2(x)\n");
        printf("3. Построить таблицу значений F1(x)\n");
        printf("4. Построить таблицу значений F2(x)\n");
        printf("5. Построить график функции F1(x)\n");
        printf("6. Построить график функции F2(x)\n");
        printf("7. Завершить работу\n");
        printf("Введите ваш выбор: ");
        scanf("%d", &choice);

        switch (choice) {
        case 1:
            printf("Введите значение x: ");
            scanf("%lf", &x);
            printf("F1(%lf) = %lf\n", x, F1(x));
            break;
        case 2:
            printf("Введите значение x: ");
            scanf("%lf", &x);
            printf("F2(%lf) = %lf\n", x, F2(x));
            break;
        case 3:
            printf("Введите начальное значение x1: ");
            scanf("%lf", &x1);
            printf("Введите конечное значение x2: ");
            scanf("%lf", &x2);
            printf("Введите шаг: ");
            scanf("%lf", &step);
            printTable(F1, x1, x2, step);
            break;
        case 4:
            printf("Введите начальное значение x1: ");
            scanf("%lf", &x1);
            printf("Введите конечное значение x2: ");
            scanf("%lf", &x2);
            printf("Введите шаг: ");
            scanf("%lf", &step);
            printTable(F2, x1, x2, step);
            break;
        case 5:
            printf("Введите начальное значение x1: ");
            scanf("%lf", &x1);
            printf("Введите конечное значение x2: ");
            scanf("%lf", &x2);
            plot(x1, x2, F1);
            break;
        case 6:
            printf("Введите начальное значение x1: ");
            scanf("%lf", &x1);
            printf("Введите конечное значение x2: ");
            scanf("%lf", &x2);
            plot(x1, x2, F2);
            break;
        case 7:
            printf("Завершение работы.\n");
            return 0;
        default:
            printf("Неверный выбор. Попробуйте снова.\n");
            break;
        }
    }
    return 0;
}
